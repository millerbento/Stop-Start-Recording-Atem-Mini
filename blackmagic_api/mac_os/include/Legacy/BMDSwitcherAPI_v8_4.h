/* -LICENSE-START-
 ** Copyright (c) 2019 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
 ** this license (the "Software") to use, reproduce, display, distribute,
 ** execute, and transmit the Software, and to prepare derivative works of the
 ** Software, and to permit third-parties to whom the Software is furnished to
 ** do so, all subject to the following:
 **
 ** The copyright notices in the Software and this entire statement, including
 ** the above license grant, this restriction and the following disclaimer,
 ** must be included in all copies of the Software, in whole or in part, and
 ** all derivative works of the Software, unless such copies or derivative
 ** works are solely in the form of machine-executable object code generated by
 ** a source language processor.
 **
 ** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 ** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 ** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 ** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 ** DEALINGS IN THE SOFTWARE.
 ** -LICENSE-END-
 */

#ifndef BMD_BMDSWITCHERAPI_V8_4_H
#define BMD_BMDSWITCHERAPI_V8_4_H


#ifndef BMD_CONST
	#if defined(_MSC_VER)
		#define BMD_CONST __declspec(selectany) static const
	#else
		#define BMD_CONST static const
	#endif
#endif

#include "BMDSwitcherAPI.h"

BMD_CONST REFIID IID_IBMDSwitcherStreamRTMP_v8_4                       = /* 5C7FF47D-AEDF-439F-BBC7-AF6F321BF079 */ { 0x5C,0x7F,0xF4,0x7D,0xAE,0xDF,0x43,0x9F,0xBB,0xC7,0xAF,0x6F,0x32,0x1B,0xF0,0x79 };

#if defined(__cplusplus)

// Forward Declarations

class IBMDSwitcherStreamRTMP_v8_4;


/* Interface IBMDSwitcherStreamRTMP_v8_4 - Switcher Stream RTMP Object */

class BMD_PUBLIC IBMDSwitcherStreamRTMP_v8_4 : public IUnknown
{
public:
    virtual HRESULT StartStreaming (void) = 0;
    virtual HRESULT StopStreaming (void) = 0;
    virtual HRESULT IsStreaming (/* out */ bool* streaming) = 0;
    virtual HRESULT GetStatus (/* out */ BMDSwitcherStreamRTMPState* state, /* out */ BMDSwitcherStreamRTMPError* error) = 0;
    virtual HRESULT SetServiceName (/* in */ CFStringRef serviceName) = 0;
    virtual HRESULT GetServiceName (/* out */ CFStringRef* serviceName) = 0;
    virtual HRESULT SetUrl (/* in */ CFStringRef url) = 0;
    virtual HRESULT GetUrl (/* out */ CFStringRef* url) = 0;
    virtual HRESULT SetKey (/* in */ CFStringRef url) = 0;
    virtual HRESULT GetKey (/* out */ CFStringRef* key) = 0;
    virtual HRESULT SetVideoBitrates (/* in */ uint32_t lowBitrate, /* in */ uint32_t highBitrate) = 0;
    virtual HRESULT GetVideoBitrates (/* out */ uint32_t* lowBitRate, /* out */ uint32_t* highBitRate) = 0;
    virtual HRESULT SetAudioBitrates (/* in */ uint32_t lowBitrate, /* in */ uint32_t highBitrate) = 0;
    virtual HRESULT GetAudioBitrates (/* out */ uint32_t* lowBitRate, /* out */ uint32_t* highBitRate) = 0;
    virtual HRESULT RequestDuration (void) = 0;
    virtual HRESULT GetDuration (/* out */ uint8_t* hours, /* out */ uint8_t* minutes, /* out */ uint8_t* seconds, /* out */ uint8_t* frames, /* out */ bool* dropFrame) = 0;
    virtual HRESULT GetEncodingBitrate (/* out */ uint32_t* encodingBitrate) = 0;
    virtual HRESULT GetCacheUsed (/* out */ double* cacheUsed) = 0;
    virtual HRESULT SetAuthentication (/* in */ CFStringRef username, /* in */ CFStringRef password) = 0;
    virtual HRESULT GetAuthentication (/* out */ CFStringRef* username, /* out */ CFStringRef* password) = 0;
    virtual HRESULT AddCallback (/* in */ IBMDSwitcherStreamRTMPCallback* callback) = 0;
    virtual HRESULT RemoveCallback (/* in */ IBMDSwitcherStreamRTMPCallback* callback) = 0;

protected:
    virtual ~IBMDSwitcherStreamRTMP_v8_4 () {} // call Release method to drop reference count
};


#endif      // defined(__cplusplus)
#endif /* defined(BMD_BMDSWITCHERAPI_V8_4_H) */
